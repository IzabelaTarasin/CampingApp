@page "/detail/{PlaceId:int}"
@using CampingApp.Domain;
@using Microsoft.AspNetCore.Components.Authorization;
@using CampingApp.Services;
@inject IReservationService ReservationService;
@inject IPlaceService PlaceService;


<PageTitle>@title</PageTitle>
@if(placeModel is not null){
<div class="text-center">
    <div class="mainText">
        <h1 class="display-4 text-capitalize text-black">Obiekt @placeModel.Name</h1>
    </div>
    <div>
        <img src="<?= isset($place) ? $place->getImagePath() : '';?>" width="500" height="500">
    </div>
    <div>
        <div>
            <p class="nameText">@placeModel.Description</p>
        </div>
        <div>
            <p class="nameText"> Cena @placeModel.PricePerDay zł / za dzień</p>
        </div>
        <div>
            <div>
                @if (placeModel.AnimalsAllowed)
                {
                    <span>Przyjazne zwierzętom</span>
                }
            </div>
            <div>
                @if (placeModel.ReceptionExist)
                {
                    <span>Całodzienna recepcja</span>
                }
            </div>
            <div>
                @if (placeModel.MedicExist)
                {
                    <span>Usługi medyczne</span>
                }
            </div>
            <div>
                @if (placeModel.RestaurantExist)
                {
                    <span>Restauracja</span>
                }
            </div>
            <div>
                @if (placeModel.GrillExist)
                {
                    <span>Miejsce na ognisko lub grilla</span>
                }
            </div>
            <div>
                @if (placeModel.WifiExist)
                {
                    <span>WiFi</span>
                }
            </div>
            <div>
                @if (placeModel.SwimmingpoolExist)
                {
                    <span>Basen</span>
                }
            </div>
        </div>
    </div>
    <AuthorizeView>
        <Authorized Context="auth">
            <EditForm Model="@inputmodel" OnValidSubmit="@HandleValidSubmit">
                <p>Rezerwuj obiekt @placeModel.Name</p>

                <label for="start">Rezerwacja od:</label>
                <InputDate @bind-Value="inputmodel.StartDate" id="start-date-input" />

                <label for="end">do:</label>
                <InputDate @bind-Value="inputmodel.EndDate" id="end-date-input" />

                <p id="info"></p>
                <p>Total price is:</p>
                <p class="price" id="total-price"></p>

                <button class="own-button" type="submit">Zarezerwuj</button>
            </EditForm>
        </Authorized>
        <NotAuthorized Context="NotAuh">
            <p>Aby zarezerwować:</p>
            <button class="own-button" type="submit">Zaloguj się</button>
            <button class="own-button" type="submit">Załóż konto</button>
        </NotAuthorized>
    </AuthorizeView>
</div>
}


@code {
    private string title = "CampApp";
    //to co zwroci getplacebyid tzreba przypisac do pola i pptem wyswietlic bo chcemy wyswietlic detale tego place
    private PlaceModel placeModel;
    [Parameter]
    public int PlaceId { get; set; } //podczas otwerania strony jest przekazywane id place, chcemy wyciagnac caly place z bazy:
    protected override async Task OnInitializedAsync()
    {
        try
        {
            placeModel = await PlaceService.GetPlaceById(PlaceId);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex);
        }
    }

    private InputModel inputmodel = new InputModel();

    private class InputModel
    {
        public int PlaceId { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await ReservationService.AddReservation(
                PlaceId,
                inputmodel.StartDate,
                inputmodel.EndDate);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}

