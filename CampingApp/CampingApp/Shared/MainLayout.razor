@inherits LayoutComponentBase
@using CampingApp.Services;
@inject IUserService UserService;
@inject NavigationManager NavigationManager;




<div class="page">
    <main>
        <div class="top-row">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    Camping App
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="offers">
                    Oferta
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="detail">
                    Detail
                </NavLink>
            </div>
            <AuthorizeView>
                <Authorized>
                    <div>
                        <NavLink class="nav-link" href="dashboard">
                            Dashboard
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="reservation">
                            Twoja rezerwacja
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="myreservations">
                            Twoje rezerwacje
                        </NavLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="signup">
                            Zarejestruj się
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="signin">
                            Zaloguj się
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
            <AuthorizeView Roles="Business, Admin">
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="newplace">
                            Dodaj obiekt
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="reservations">
                            Rezerwacje
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="myplaces">
                            Twoje obiekty
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="users">
                            Users
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <div>
                        <p>Witaj @userEmail</p>
                    </div>
                    <div class="nav-item px-3">
                        <button class="own-button" @onclick="onLogoutButtonClicked">Wyloguj się</button>
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>
        <div>
            @Body
        </div>
    </main>
</div>

@code
{
    //INFO o zalogowanym uzytkowniku
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } //odpala sie w momencie kiedy uruchomi sie strona po zalogowaniu wiec musimy nadpisac metode oninitialized async
    private string userEmail;

    protected override async Task OnInitializedAsync()
    {
        //bedzie pobierane stan zalogowania:
        var outState = await authenticationStateTask;
        //pobranie uzytkownika ktory zalogowany
        var user = outState.User;
        userEmail = user.Identity.Name;
    }

    private async Task onLogoutButtonClicked()
    {
        //czyszczenie tokena i nawigujemy do strony glownej aby to uczycnic musimy wstrzyknac localStorage(odnosi sie do specjalnego miejsca po stronie klienta gdzie mozna keszowac rzeczy i sa w stanie przetwwac zamkniecie okna) i wstrzyknac navigation manager ktory pozwoli na nawigacje z poziomu kodu a nie z navlinka
        //czyszczenie przez localstorage: rrobimy to w pliku userservice
        await UserService.Logout();
        //nawigacja do stony glownej:
        //wstykniecie naav manager:
        NavigationManager.NavigateTo("", true); //true spowoduje ze przeladuje cala strone, wymusi odswiezenie strony
    }
}